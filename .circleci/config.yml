version: 2.1

orbs:
  node: circleci/node@5.0.3

# === Scheduled Pipeline Parameters ===
parameters:
  nightly-security-scan:
    type: boolean
    default: false

jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: npm run test

  e2e_tests:
    macos:
      xcode: "15.4"
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Select Xcode 15.4
          command: sudo xcode-select -s /Applications/Xcode-15.4.app

      - run:
          name: Install Maestro CLI
          command: |
            curl -Ls "https://get.maestro.mobile.dev" | bash
            export PATH="$HOME/.maestro/bin:$PATH"

      - run:
          name: Boot and Activate iOS Simulator
          command: |
            SIMULATOR_UDID=6A1BEA9D-48AB-4186-93A9-AB125B9FC67D
            xcrun simctl shutdown $SIMULATOR_UDID || true
            xcrun simctl boot $SIMULATOR_UDID
            xcrun simctl bootstatus $SIMULATOR_UDID -b
            sleep 20
            xcrun simctl list devices | grep Booted

      - run:
          name: Extract .app from Archive
          command: |
            tar -xzf example/build-example.tar.gz

      - run:
          name: Install .app on Simulator
          command: |
            SIMULATOR_UDID=6A1BEA9D-48AB-4186-93A9-AB125B9FC67D
            APP_PATH=example.app
            xcrun simctl install $SIMULATOR_UDID $APP_PATH

      - run:
          name: Launch Application
          command: |
            SIMULATOR_UDID=6A1BEA9D-48AB-4186-93A9-AB125B9FC67D
            APP_BUNDLE_ID=vgscollectreactnative.example
            xcrun simctl launch $SIMULATOR_UDID $APP_BUNDLE_ID
            sleep 10

      - run:
          name: Run Maestro Tests
          command: |
            export PATH="$HOME/.maestro/bin:$PATH"
            maestro test example/.maestro/collect_card_form_invalid.yaml

      - store_artifacts:
          path: /Users/distiller/.maestro/tests/
          destination: maestro-screenshots

  scan-sast-pr:
    parameters:
      default_branch:
        type: string
        default: main
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
      SEMGREP_BASELINE_REF: << parameters.default_branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep diff scan"
          command: semgrep ci

  scan-sast-full:
    parameters:
      default_branch:
        type: string
        default: main
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep full scan"
          command: semgrep ci

workflows:
  test-and-publish:
    when:
      not: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-pr:
          context:
            - frontend-deploy
            - security-tools
            - circleci
      - scan-sast-full:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test:
          context:
            - frontend-deploy
            - circleci
      - e2e_tests:
          context:
            - frontend-deploy
            - circleci
          requires:
            - test

  scheduled-security-scan:
    when: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-full:
          context:
            - security-tools
            - frontend-deploy
            - circleci